name: Docker Scan
on:
  workflow_dispatch:
  pull_request:
    branches:
      - main

jobs:
  docker_scan:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Get branch name
        id: get_branch
        run: echo "branch_name=${GITHUB_HEAD_REF}" >> $GITHUB_ENV

      - name: Shorten slug
        id: shorten
        run: |
          short_slug=$(echo "${{ env.branch_name }}" | sed -e "s/feature/f/" | sed 's/[\/:.]/-/g' | cut -c -20 | sed -e "s/-$//" )
          echo "slug=${short_slug}" >> $GITHUB_ENV

      - name: Find Dockerfile
        id: find_dockerfile
        run: |
          if [ -f "trivy/dockerfile_path.txt" ]; then
            DOCKERFILE_PATH=$(cat trivy/dockerfile_path.txt)
            echo "dockerfile path: $DOCKERFILE_PATH"
          else
            echo "# trivy/dockerfile_path.txt not found!" >> $GITHUB_STEP_SUMMARY
            exit 1
          fi
          if [ -z "$DOCKERFILE_PATH" ]; then
            echo "# Dockerfile path is empty!" >> $GITHUB_STEP_SUMMARY
            echo "## No docker image will be scanned"
            exit 1
          fi
          echo "dockerfile_path=$DOCKERFILE_PATH" >> $GITHUB_ENV

      - name: Build and Docker image
        run: |
          docker build -t scan:${{ env.slug }} -f ${{ env.dockerfile_path }} .

      - name: Scan Docker Image with Grype
        id: grype
        uses: anchore/scan-action@v6.1.0
        with:
          image: scan:${{ env.slug }}
          fail-build: false
          severity-cutoff: high
          only-fixed: true
          output-format: json

      - name: Convert Grype Results to Markdown
        run: |
          jq -r '
            .matches[] |
            "* **Package**: \(.artifact.name)
            * **ID**: \(.vulnerability.id)
            * **Severity**: \(.vulnerability.severity)
            * **Installed Version**: \(.artifact.version)
            * **Fixed Version**: \(.vulnerability.fix.state // "N/A")"
          ' ${{ steps.grype.outputs.json }} > grype_report.md

      - name: Display scan results
        if: always()
        run: |
          if [[ -s grype_report.md ]]; then
            {
              echo "## Trivy Scan Results" >> $GITHUB_STEP_SUMMARY
              echo "" >> $GITHUB_STEP_SUMMARY
              echo "### Summary" >> $GITHUB_STEP_SUMMARY
              echo "" >> $GITHUB_STEP_SUMMARY
              echo "The following vulnerabilities were found in the Docker image: ${{ env.dockerfile_path }}"  >> $GITHUB_STEP_SUMMARY
              echo "<details><summary>Click to expand</summary>" >> $GITHUB_STEP_SUMMARY
              echo "" >> $GITHUB_STEP_SUMMARY
              cat grype_report.md >> $GITHUB_STEP_SUMMARY
              echo "" >> $GITHUB_STEP_SUMMARY
              echo "</details>" >> $GITHUB_STEP_SUMMARY
            }
          fi
